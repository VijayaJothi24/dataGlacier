{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9638701,"sourceType":"datasetVersion","datasetId":5885468},{"sourceId":9638930,"sourceType":"datasetVersion","datasetId":5885663},{"sourceId":145262,"sourceType":"modelInstanceVersion","isSourceIdPinned":true,"modelInstanceId":123146,"modelId":146200}],"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-25T11:51:12.156059Z","iopub.execute_input":"2024-10-25T11:51:12.156494Z","iopub.status.idle":"2024-10-25T11:51:12.178488Z","shell.execute_reply.started":"2024-10-25T11:51:12.156451Z","shell.execute_reply":"2024-10-25T11:51:12.177053Z"},"trusted":true},"outputs":[{"name":"stdout","text":"/kaggle/input/.sav/scikitlearn/default/1/final_model.sav\n/kaggle/input/bank-full-version1/bank-full.csv\n/kaggle/input/bank-01/bank.csv\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:26:58.944627Z","iopub.execute_input":"2024-10-26T15:26:58.945042Z","iopub.status.idle":"2024-10-26T15:27:02.555083Z","shell.execute_reply.started":"2024-10-26T15:26:58.944999Z","shell.execute_reply":"2024-10-26T15:27:02.553933Z"},"trusted":true},"outputs":[],"execution_count":1},{"cell_type":"code","source":"Bank_data = pd.read_csv(\"/kaggle/input/bank-full-version1/bank-full.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:27:07.401916Z","iopub.execute_input":"2024-10-26T15:27:07.402371Z","iopub.status.idle":"2024-10-26T15:27:07.643078Z","shell.execute_reply.started":"2024-10-26T15:27:07.402327Z","shell.execute_reply":"2024-10-26T15:27:07.641725Z"},"trusted":true},"outputs":[],"execution_count":3},{"cell_type":"code","source":"import pandas as pd\n\n\nBank_data = pd.read_csv('/kaggle/input/bank-full-version1/bank-full.csv')\n\n# Display column names\nprint(Bank_data.columns)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:27:09.344719Z","iopub.execute_input":"2024-10-26T15:27:09.345297Z","iopub.status.idle":"2024-10-26T15:27:09.521288Z","shell.execute_reply.started":"2024-10-26T15:27:09.345239Z","shell.execute_reply":"2024-10-26T15:27:09.520037Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Index(['sl. no', 'age', 'job', 'marital', 'education', 'default', 'balance',\n       'housing', 'loan', 'contact', 'day', 'month', 'duration', 'campaign',\n       'pdays', 'previous', 'poutcome', 'y'],\n      dtype='object')\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"Bank_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:27:12.474673Z","iopub.execute_input":"2024-10-26T15:27:12.475145Z","iopub.status.idle":"2024-10-26T15:27:12.506022Z","shell.execute_reply.started":"2024-10-26T15:27:12.475102Z","shell.execute_reply":"2024-10-26T15:27:12.504755Z"},"trusted":true},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"   sl. no  age           job  marital  education default  balance housing  \\\n0       1   58    management  married   tertiary      no     2143     yes   \n1       2   44    technician   single  secondary      no       29     yes   \n2       3   33  entrepreneur  married  secondary      no        2     yes   \n3       4   47   blue-collar  married    unknown      no     1506     yes   \n4       5   33       unknown   single    unknown      no        1      no   \n\n  loan  contact  day month  duration  campaign  pdays  previous poutcome   y  \n0   no  unknown    5   may       261         1     -1         0  unknown  no  \n1   no  unknown    5   may       151         1     -1         0  unknown  no  \n2  yes  unknown    5   may        76         1     -1         0  unknown  no  \n3   no  unknown    5   may        92         1     -1         0  unknown  no  \n4   no  unknown    5   may       198         1     -1         0  unknown  no  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>58</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>2143</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>261</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>44</td>\n      <td>technician</td>\n      <td>single</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>29</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>151</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>33</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2</td>\n      <td>yes</td>\n      <td>yes</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>76</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>47</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>unknown</td>\n      <td>no</td>\n      <td>1506</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>92</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>33</td>\n      <td>unknown</td>\n      <td>single</td>\n      <td>unknown</td>\n      <td>no</td>\n      <td>1</td>\n      <td>no</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>198</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"Bank_data","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:27:16.963963Z","iopub.execute_input":"2024-10-26T15:27:16.964421Z","iopub.status.idle":"2024-10-26T15:27:16.990715Z","shell.execute_reply.started":"2024-10-26T15:27:16.964371Z","shell.execute_reply":"2024-10-26T15:27:16.989429Z"},"trusted":true},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"       sl. no  age           job   marital  education default  balance  \\\n0           1   58    management   married   tertiary      no     2143   \n1           2   44    technician    single  secondary      no       29   \n2           3   33  entrepreneur   married  secondary      no        2   \n3           4   47   blue-collar   married    unknown      no     1506   \n4           5   33       unknown    single    unknown      no        1   \n...       ...  ...           ...       ...        ...     ...      ...   \n45206   45207   51    technician   married   tertiary      no      825   \n45207   45208   71       retired  divorced    primary      no     1729   \n45208   45209   72       retired   married  secondary      no     5715   \n45209   45210   57   blue-collar   married  secondary      no      668   \n45210   45211   37  entrepreneur   married  secondary      no     2971   \n\n      housing loan    contact  day month  duration  campaign  pdays  previous  \\\n0         yes   no    unknown    5   may       261         1     -1         0   \n1         yes   no    unknown    5   may       151         1     -1         0   \n2         yes  yes    unknown    5   may        76         1     -1         0   \n3         yes   no    unknown    5   may        92         1     -1         0   \n4          no   no    unknown    5   may       198         1     -1         0   \n...       ...  ...        ...  ...   ...       ...       ...    ...       ...   \n45206      no   no   cellular   17   nov       977         3     -1         0   \n45207      no   no   cellular   17   nov       456         2     -1         0   \n45208      no   no   cellular   17   nov      1127         5    184         3   \n45209      no   no  telephone   17   nov       508         4     -1         0   \n45210      no   no   cellular   17   nov       361         2    188        11   \n\n      poutcome    y  \n0      unknown   no  \n1      unknown   no  \n2      unknown   no  \n3      unknown   no  \n4      unknown   no  \n...        ...  ...  \n45206  unknown  yes  \n45207  unknown  yes  \n45208  success  yes  \n45209  unknown   no  \n45210    other   no  \n\n[45211 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>58</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>2143</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>261</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>44</td>\n      <td>technician</td>\n      <td>single</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>29</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>151</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>33</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2</td>\n      <td>yes</td>\n      <td>yes</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>76</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>47</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>unknown</td>\n      <td>no</td>\n      <td>1506</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>92</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>33</td>\n      <td>unknown</td>\n      <td>single</td>\n      <td>unknown</td>\n      <td>no</td>\n      <td>1</td>\n      <td>no</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>198</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45206</th>\n      <td>45207</td>\n      <td>51</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>825</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>977</td>\n      <td>3</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>1729</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>5715</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45209</th>\n      <td>45210</td>\n      <td>57</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>668</td>\n      <td>no</td>\n      <td>no</td>\n      <td>telephone</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>508</td>\n      <td>4</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>45210</th>\n      <td>45211</td>\n      <td>37</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2971</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>361</td>\n      <td>2</td>\n      <td>188</td>\n      <td>11</td>\n      <td>other</td>\n      <td>no</td>\n    </tr>\n  </tbody>\n</table>\n<p>45211 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"Bank_data.info()","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:27:19.777563Z","iopub.execute_input":"2024-10-26T15:27:19.778572Z","iopub.status.idle":"2024-10-26T15:27:19.854521Z","shell.execute_reply.started":"2024-10-26T15:27:19.778526Z","shell.execute_reply":"2024-10-26T15:27:19.853279Z"},"trusted":true},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 45211 entries, 0 to 45210\nData columns (total 18 columns):\n #   Column     Non-Null Count  Dtype \n---  ------     --------------  ----- \n 0   sl. no     45211 non-null  int64 \n 1   age        45211 non-null  int64 \n 2   job        45211 non-null  object\n 3   marital    45211 non-null  object\n 4   education  45211 non-null  object\n 5   default    45211 non-null  object\n 6   balance    45211 non-null  int64 \n 7   housing    45211 non-null  object\n 8   loan       45211 non-null  object\n 9   contact    45211 non-null  object\n 10  day        45211 non-null  int64 \n 11  month      45211 non-null  object\n 12  duration   45211 non-null  int64 \n 13  campaign   45211 non-null  int64 \n 14  pdays      45211 non-null  int64 \n 15  previous   45211 non-null  int64 \n 16  poutcome   45211 non-null  object\n 17  y          45211 non-null  object\ndtypes: int64(8), object(10)\nmemory usage: 6.2+ MB\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"Bank_data = Bank_data.drop_duplicates()\nBank_data","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:27:23.410340Z","iopub.execute_input":"2024-10-26T15:27:23.411471Z","iopub.status.idle":"2024-10-26T15:27:23.489483Z","shell.execute_reply.started":"2024-10-26T15:27:23.411421Z","shell.execute_reply":"2024-10-26T15:27:23.488316Z"},"trusted":true},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"       sl. no  age           job   marital  education default  balance  \\\n0           1   58    management   married   tertiary      no     2143   \n1           2   44    technician    single  secondary      no       29   \n2           3   33  entrepreneur   married  secondary      no        2   \n3           4   47   blue-collar   married    unknown      no     1506   \n4           5   33       unknown    single    unknown      no        1   \n...       ...  ...           ...       ...        ...     ...      ...   \n45206   45207   51    technician   married   tertiary      no      825   \n45207   45208   71       retired  divorced    primary      no     1729   \n45208   45209   72       retired   married  secondary      no     5715   \n45209   45210   57   blue-collar   married  secondary      no      668   \n45210   45211   37  entrepreneur   married  secondary      no     2971   \n\n      housing loan    contact  day month  duration  campaign  pdays  previous  \\\n0         yes   no    unknown    5   may       261         1     -1         0   \n1         yes   no    unknown    5   may       151         1     -1         0   \n2         yes  yes    unknown    5   may        76         1     -1         0   \n3         yes   no    unknown    5   may        92         1     -1         0   \n4          no   no    unknown    5   may       198         1     -1         0   \n...       ...  ...        ...  ...   ...       ...       ...    ...       ...   \n45206      no   no   cellular   17   nov       977         3     -1         0   \n45207      no   no   cellular   17   nov       456         2     -1         0   \n45208      no   no   cellular   17   nov      1127         5    184         3   \n45209      no   no  telephone   17   nov       508         4     -1         0   \n45210      no   no   cellular   17   nov       361         2    188        11   \n\n      poutcome    y  \n0      unknown   no  \n1      unknown   no  \n2      unknown   no  \n3      unknown   no  \n4      unknown   no  \n...        ...  ...  \n45206  unknown  yes  \n45207  unknown  yes  \n45208  success  yes  \n45209  unknown   no  \n45210    other   no  \n\n[45211 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>58</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>2143</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>261</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>44</td>\n      <td>technician</td>\n      <td>single</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>29</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>151</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>33</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2</td>\n      <td>yes</td>\n      <td>yes</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>76</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>47</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>unknown</td>\n      <td>no</td>\n      <td>1506</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>92</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>33</td>\n      <td>unknown</td>\n      <td>single</td>\n      <td>unknown</td>\n      <td>no</td>\n      <td>1</td>\n      <td>no</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>198</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45206</th>\n      <td>45207</td>\n      <td>51</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>825</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>977</td>\n      <td>3</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>1729</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>5715</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45209</th>\n      <td>45210</td>\n      <td>57</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>668</td>\n      <td>no</td>\n      <td>no</td>\n      <td>telephone</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>508</td>\n      <td>4</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>45210</th>\n      <td>45211</td>\n      <td>37</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2971</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>361</td>\n      <td>2</td>\n      <td>188</td>\n      <td>11</td>\n      <td>other</td>\n      <td>no</td>\n    </tr>\n  </tbody>\n</table>\n<p>45211 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"# Check for missing values \nprint(Bank_data.isnull().sum())","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:27:26.690388Z","iopub.execute_input":"2024-10-26T15:27:26.690826Z","iopub.status.idle":"2024-10-26T15:27:26.748553Z","shell.execute_reply.started":"2024-10-26T15:27:26.690780Z","shell.execute_reply":"2024-10-26T15:27:26.747251Z"},"trusted":true},"outputs":[{"name":"stdout","text":"sl. no       0\nage          0\njob          0\nmarital      0\neducation    0\ndefault      0\nbalance      0\nhousing      0\nloan         0\ncontact      0\nday          0\nmonth        0\nduration     0\ncampaign     0\npdays        0\nprevious     0\npoutcome     0\ny            0\ndtype: int64\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"newdataframe","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:07.735644Z","iopub.execute_input":"2024-10-26T15:30:07.736099Z","iopub.status.idle":"2024-10-26T15:30:07.760073Z","shell.execute_reply.started":"2024-10-26T15:30:07.736056Z","shell.execute_reply":"2024-10-26T15:30:07.758890Z"},"trusted":true},"outputs":[{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"       sl. no  age           job   marital  education default  balance  \\\n0           1   58    management   married   tertiary      no     2143   \n1           2   44    technician    single  secondary      no       29   \n2           3   33  entrepreneur   married  secondary      no        2   \n3           4   47   blue-collar   married        NaN      no     1506   \n4           5   33           NaN    single        NaN      no        1   \n...       ...  ...           ...       ...        ...     ...      ...   \n45206   45207   51    technician   married   tertiary      no      825   \n45207   45208   71       retired  divorced    primary      no     1729   \n45208   45209   72       retired   married  secondary      no     5715   \n45209   45210   57   blue-collar   married  secondary      no      668   \n45210   45211   37  entrepreneur   married  secondary      no     2971   \n\n      housing loan    contact  day month  duration  campaign  pdays  previous  \\\n0         yes   no    unknown    5   may       261         1     -1         0   \n1         yes   no    unknown    5   may       151         1     -1         0   \n2         yes  yes    unknown    5   may        76         1     -1         0   \n3         yes   no    unknown    5   may        92         1     -1         0   \n4          no   no    unknown    5   may       198         1     -1         0   \n...       ...  ...        ...  ...   ...       ...       ...    ...       ...   \n45206      no   no   cellular   17   nov       977         3     -1         0   \n45207      no   no   cellular   17   nov       456         2     -1         0   \n45208      no   no   cellular   17   nov      1127         5    184         3   \n45209      no   no  telephone   17   nov       508         4     -1         0   \n45210      no   no   cellular   17   nov       361         2    188        11   \n\n      poutcome    y  \n0      unknown   no  \n1      unknown   no  \n2      unknown   no  \n3      unknown   no  \n4      unknown   no  \n...        ...  ...  \n45206  unknown  yes  \n45207  unknown  yes  \n45208  success  yes  \n45209  unknown   no  \n45210    other   no  \n\n[45211 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>58</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>2143</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>261</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>44</td>\n      <td>technician</td>\n      <td>single</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>29</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>151</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>33</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2</td>\n      <td>yes</td>\n      <td>yes</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>76</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>47</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>NaN</td>\n      <td>no</td>\n      <td>1506</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>92</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>33</td>\n      <td>NaN</td>\n      <td>single</td>\n      <td>NaN</td>\n      <td>no</td>\n      <td>1</td>\n      <td>no</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>198</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45206</th>\n      <td>45207</td>\n      <td>51</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>825</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>977</td>\n      <td>3</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>1729</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>5715</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45209</th>\n      <td>45210</td>\n      <td>57</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>668</td>\n      <td>no</td>\n      <td>no</td>\n      <td>telephone</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>508</td>\n      <td>4</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>45210</th>\n      <td>45211</td>\n      <td>37</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2971</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>361</td>\n      <td>2</td>\n      <td>188</td>\n      <td>11</td>\n      <td>other</td>\n      <td>no</td>\n    </tr>\n  </tbody>\n</table>\n<p>45211 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":54},{"cell_type":"code","source":"pd.DataFrame(Bank_data['education'].value_counts())","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:14.242077Z","iopub.execute_input":"2024-10-26T15:30:14.242512Z","iopub.status.idle":"2024-10-26T15:30:14.260585Z","shell.execute_reply.started":"2024-10-26T15:30:14.242467Z","shell.execute_reply":"2024-10-26T15:30:14.259452Z"},"trusted":true},"outputs":[{"execution_count":56,"output_type":"execute_result","data":{"text/plain":"           count\neducation       \nsecondary  23202\ntertiary   13301\nprimary     6851","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n    </tr>\n    <tr>\n      <th>education</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>secondary</th>\n      <td>23202</td>\n    </tr>\n    <tr>\n      <th>tertiary</th>\n      <td>13301</td>\n    </tr>\n    <tr>\n      <th>primary</th>\n      <td>6851</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":56},{"cell_type":"code","source":"newdataframe.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:17.209329Z","iopub.execute_input":"2024-10-26T15:30:17.209836Z","iopub.status.idle":"2024-10-26T15:30:17.274922Z","shell.execute_reply.started":"2024-10-26T15:30:17.209789Z","shell.execute_reply":"2024-10-26T15:30:17.273368Z"},"trusted":true},"outputs":[{"execution_count":57,"output_type":"execute_result","data":{"text/plain":"sl. no          0\nage             0\njob           288\nmarital         0\neducation    1857\ndefault         0\nbalance         0\nhousing         0\nloan            0\ncontact         0\nday             0\nmonth           0\nduration        0\ncampaign        0\npdays           0\nprevious        0\npoutcome        0\ny               0\ndtype: int64"},"metadata":{}}],"execution_count":57},{"cell_type":"code","source":"newdataframe = newdataframe.sort_values(by='age', ascending=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-25T11:51:14.320712Z","iopub.status.idle":"2024-10-25T11:51:14.321267Z","shell.execute_reply.started":"2024-10-25T11:51:14.320991Z","shell.execute_reply":"2024-10-25T11:51:14.321019Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"newdataframe","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:21.345289Z","iopub.execute_input":"2024-10-26T15:30:21.345762Z","iopub.status.idle":"2024-10-26T15:30:21.370024Z","shell.execute_reply.started":"2024-10-26T15:30:21.345714Z","shell.execute_reply":"2024-10-26T15:30:21.368979Z"},"trusted":true},"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"       sl. no  age           job   marital  education default  balance  \\\n0           1   58    management   married   tertiary      no     2143   \n1           2   44    technician    single  secondary      no       29   \n2           3   33  entrepreneur   married  secondary      no        2   \n3           4   47   blue-collar   married        NaN      no     1506   \n4           5   33           NaN    single        NaN      no        1   \n...       ...  ...           ...       ...        ...     ...      ...   \n45206   45207   51    technician   married   tertiary      no      825   \n45207   45208   71       retired  divorced    primary      no     1729   \n45208   45209   72       retired   married  secondary      no     5715   \n45209   45210   57   blue-collar   married  secondary      no      668   \n45210   45211   37  entrepreneur   married  secondary      no     2971   \n\n      housing loan    contact  day month  duration  campaign  pdays  previous  \\\n0         yes   no    unknown    5   may       261         1     -1         0   \n1         yes   no    unknown    5   may       151         1     -1         0   \n2         yes  yes    unknown    5   may        76         1     -1         0   \n3         yes   no    unknown    5   may        92         1     -1         0   \n4          no   no    unknown    5   may       198         1     -1         0   \n...       ...  ...        ...  ...   ...       ...       ...    ...       ...   \n45206      no   no   cellular   17   nov       977         3     -1         0   \n45207      no   no   cellular   17   nov       456         2     -1         0   \n45208      no   no   cellular   17   nov      1127         5    184         3   \n45209      no   no  telephone   17   nov       508         4     -1         0   \n45210      no   no   cellular   17   nov       361         2    188        11   \n\n      poutcome    y  \n0      unknown   no  \n1      unknown   no  \n2      unknown   no  \n3      unknown   no  \n4      unknown   no  \n...        ...  ...  \n45206  unknown  yes  \n45207  unknown  yes  \n45208  success  yes  \n45209  unknown   no  \n45210    other   no  \n\n[45211 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>58</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>2143</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>261</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>44</td>\n      <td>technician</td>\n      <td>single</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>29</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>151</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>33</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2</td>\n      <td>yes</td>\n      <td>yes</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>76</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>47</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>NaN</td>\n      <td>no</td>\n      <td>1506</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>92</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>33</td>\n      <td>NaN</td>\n      <td>single</td>\n      <td>NaN</td>\n      <td>no</td>\n      <td>1</td>\n      <td>no</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>198</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45206</th>\n      <td>45207</td>\n      <td>51</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>825</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>977</td>\n      <td>3</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>1729</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>5715</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45209</th>\n      <td>45210</td>\n      <td>57</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>668</td>\n      <td>no</td>\n      <td>no</td>\n      <td>telephone</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>508</td>\n      <td>4</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>45210</th>\n      <td>45211</td>\n      <td>37</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2971</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>361</td>\n      <td>2</td>\n      <td>188</td>\n      <td>11</td>\n      <td>other</td>\n      <td>no</td>\n    </tr>\n  </tbody>\n</table>\n<p>45211 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":58},{"cell_type":"code","source":"newdataframe['job'].unique()","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:24.224917Z","iopub.execute_input":"2024-10-26T15:30:24.225354Z","iopub.status.idle":"2024-10-26T15:30:24.236327Z","shell.execute_reply.started":"2024-10-26T15:30:24.225313Z","shell.execute_reply":"2024-10-26T15:30:24.234980Z"},"trusted":true},"outputs":[{"execution_count":59,"output_type":"execute_result","data":{"text/plain":"array(['management', 'technician', 'entrepreneur', 'blue-collar', nan,\n       'retired', 'admin.', 'services', 'self-employed', 'unemployed',\n       'housemaid', 'student'], dtype=object)"},"metadata":{}}],"execution_count":59},{"cell_type":"code","source":"data_marital","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:34.153031Z","iopub.execute_input":"2024-10-26T15:30:34.153589Z","iopub.status.idle":"2024-10-26T15:30:34.170841Z","shell.execute_reply.started":"2024-10-26T15:30:34.153531Z","shell.execute_reply":"2024-10-26T15:30:34.168605Z"},"trusted":true},"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"          student  blue-collar  admin.  services  unemployed  technician  \\\nmarital                                                                    \nsingle        878         2014    1728      1198         401        2620   \nmarried        54         6968    2693      2407         731        4052   \ndivorced        6          750     750       549         171         925   \n\n          retired  management  entrepreneur  self-employed  housemaid  nan  \nmarital                                                                     \nsingle        108        2947           238            446        144  NaN  \nmarried      1731        5400          1070            993        912  NaN  \ndivorced      425        1111           179            140        184  NaN  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>student</th>\n      <th>blue-collar</th>\n      <th>admin.</th>\n      <th>services</th>\n      <th>unemployed</th>\n      <th>technician</th>\n      <th>retired</th>\n      <th>management</th>\n      <th>entrepreneur</th>\n      <th>self-employed</th>\n      <th>housemaid</th>\n      <th>nan</th>\n    </tr>\n    <tr>\n      <th>marital</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>single</th>\n      <td>878</td>\n      <td>2014</td>\n      <td>1728</td>\n      <td>1198</td>\n      <td>401</td>\n      <td>2620</td>\n      <td>108</td>\n      <td>2947</td>\n      <td>238</td>\n      <td>446</td>\n      <td>144</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>married</th>\n      <td>54</td>\n      <td>6968</td>\n      <td>2693</td>\n      <td>2407</td>\n      <td>731</td>\n      <td>4052</td>\n      <td>1731</td>\n      <td>5400</td>\n      <td>1070</td>\n      <td>993</td>\n      <td>912</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>divorced</th>\n      <td>6</td>\n      <td>750</td>\n      <td>750</td>\n      <td>549</td>\n      <td>171</td>\n      <td>925</td>\n      <td>425</td>\n      <td>1111</td>\n      <td>179</td>\n      <td>140</td>\n      <td>184</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":62},{"cell_type":"code","source":"import pandas as pd\n\n\nagetomarital = pd.DataFrame()\nagetomarital['married'] = newdataframe[newdataframe['marital'] == 'married']['age'].value_counts()\nagetomarital['single'] = newdataframe[newdataframe['marital'] == 'single']['age'].value_counts()\nagetomarital['divorced'] = newdataframe[newdataframe['marital'] == 'divorced']['age'].value_counts()\n\nprint(agetomarital)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:40.100826Z","iopub.execute_input":"2024-10-26T15:30:40.101243Z","iopub.status.idle":"2024-10-26T15:30:40.157668Z","shell.execute_reply.started":"2024-10-26T15:30:40.101204Z","shell.execute_reply":"2024-10-26T15:30:40.156549Z"},"trusted":true},"outputs":[{"name":"stdout","text":"     married  single  divorced\nage                           \n34      1131   650.0     149.0\n35      1077   631.0     186.0\n36      1076   538.0     192.0\n33      1075   746.0     151.0\n37      1073   453.0     170.0\n..       ...     ...       ...\n89         2     NaN       1.0\n92         2     NaN       NaN\n93         2     NaN       NaN\n88         2     NaN       NaN\n95         1     NaN       1.0\n\n[73 rows x 3 columns]\n","output_type":"stream"}],"execution_count":64},{"cell_type":"code","source":"agetomarital.sort_index()","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:42.719729Z","iopub.execute_input":"2024-10-26T15:30:42.720191Z","iopub.status.idle":"2024-10-26T15:30:42.739776Z","shell.execute_reply.started":"2024-10-26T15:30:42.720148Z","shell.execute_reply":"2024-10-26T15:30:42.738637Z"},"trusted":true},"outputs":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"     married  single  divorced\nage                           \n20         3    47.0       NaN\n21         5    74.0       NaN\n22         9   120.0       NaN\n23        27   175.0       NaN\n24        53   248.0       1.0\n..       ...     ...       ...\n88         2     NaN       NaN\n89         2     NaN       1.0\n92         2     NaN       NaN\n93         2     NaN       NaN\n95         1     NaN       1.0\n\n[73 rows x 3 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>married</th>\n      <th>single</th>\n      <th>divorced</th>\n    </tr>\n    <tr>\n      <th>age</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>20</th>\n      <td>3</td>\n      <td>47.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>5</td>\n      <td>74.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>9</td>\n      <td>120.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>27</td>\n      <td>175.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>53</td>\n      <td>248.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>88</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>89</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>92</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>93</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>73 rows × 3 columns</p>\n</div>"},"metadata":{}}],"execution_count":65},{"cell_type":"code","source":"newdataframe['education'].unique()","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:47.072786Z","iopub.execute_input":"2024-10-26T15:30:47.073232Z","iopub.status.idle":"2024-10-26T15:30:47.084210Z","shell.execute_reply.started":"2024-10-26T15:30:47.073189Z","shell.execute_reply":"2024-10-26T15:30:47.083074Z"},"trusted":true},"outputs":[{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"array(['tertiary', 'secondary', nan, 'primary'], dtype=object)"},"metadata":{}}],"execution_count":66},{"cell_type":"code","source":"import pandas as pd\n\n\nagetoeducation = pd.DataFrame()\nagetoeducation['tertiary'] = newdataframe[newdataframe['education'] == 'tertiary']['age'].value_counts()\nagetoeducation['secondary'] = newdataframe[newdataframe['education'] == 'secondary']['age'].value_counts()\nagetoeducation['unknown'] = newdataframe[newdataframe['education'] == 'unknown']['age'].value_counts()\nagetoeducation['primary'] = newdataframe[newdataframe['education'] == 'primary']['age'].value_counts()\n\nprint(agetoeducation)","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:49.255755Z","iopub.execute_input":"2024-10-26T15:30:49.256195Z","iopub.status.idle":"2024-10-26T15:30:49.335289Z","shell.execute_reply.started":"2024-10-26T15:30:49.256153Z","shell.execute_reply":"2024-10-26T15:30:49.334280Z"},"trusted":true},"outputs":[{"name":"stdout","text":"     tertiary  secondary  unknown  primary\nage                                       \n32        776     1088.0      NaN      179\n33        760     1011.0      NaN      167\n31        749     1065.0      NaN      139\n34        718     1000.0      NaN      166\n30        686      913.0      NaN      124\n..        ...        ...      ...      ...\n82          2        3.0      NaN       12\n81          2        3.0      NaN       10\n80          1       12.0      NaN       17\n89          1        NaN      NaN        2\n84          1        3.0      NaN        5\n\n[65 rows x 4 columns]\n","output_type":"stream"}],"execution_count":67},{"cell_type":"code","source":"agetoeducation.sort_index()","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:52.730316Z","iopub.execute_input":"2024-10-26T15:30:52.731184Z","iopub.status.idle":"2024-10-26T15:30:52.746834Z","shell.execute_reply.started":"2024-10-26T15:30:52.731135Z","shell.execute_reply":"2024-10-26T15:30:52.745459Z"},"trusted":true},"outputs":[{"execution_count":68,"output_type":"execute_result","data":{"text/plain":"     tertiary  secondary  unknown  primary\nage                                       \n20          3       26.0      NaN        6\n21          6       54.0      NaN       10\n22         14       96.0      NaN        8\n23         33      143.0      NaN       17\n24         44      219.0      NaN       19\n..        ...        ...      ...      ...\n81          2        3.0      NaN       10\n82          2        3.0      NaN       12\n83          5        2.0      NaN       14\n84          1        3.0      NaN        5\n89          1        NaN      NaN        2\n\n[65 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>tertiary</th>\n      <th>secondary</th>\n      <th>unknown</th>\n      <th>primary</th>\n    </tr>\n    <tr>\n      <th>age</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>20</th>\n      <td>3</td>\n      <td>26.0</td>\n      <td>NaN</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>6</td>\n      <td>54.0</td>\n      <td>NaN</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>14</td>\n      <td>96.0</td>\n      <td>NaN</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>33</td>\n      <td>143.0</td>\n      <td>NaN</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>44</td>\n      <td>219.0</td>\n      <td>NaN</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>2</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>2</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>83</th>\n      <td>5</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>84</th>\n      <td>1</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>89</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n<p>65 rows × 4 columns</p>\n</div>"},"metadata":{}}],"execution_count":68},{"cell_type":"code","source":"print(data_marital.columns)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:30:55.738469Z","iopub.execute_input":"2024-10-26T15:30:55.739438Z","iopub.status.idle":"2024-10-26T15:30:55.745071Z","shell.execute_reply.started":"2024-10-26T15:30:55.739390Z","shell.execute_reply":"2024-10-26T15:30:55.743947Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Index(['student', 'blue-collar', 'admin.', 'services', 'unemployed',\n       'technician', 'retired', 'management', 'entrepreneur', 'self-employed',\n       'housemaid', 'nan'],\n      dtype='object')\n","output_type":"stream"}],"execution_count":69},{"cell_type":"code","source":"newdataframe","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:31:06.778163Z","iopub.execute_input":"2024-10-26T15:31:06.778603Z","iopub.status.idle":"2024-10-26T15:31:06.804223Z","shell.execute_reply.started":"2024-10-26T15:31:06.778559Z","shell.execute_reply":"2024-10-26T15:31:06.802906Z"},"trusted":true},"outputs":[{"execution_count":71,"output_type":"execute_result","data":{"text/plain":"       sl. no  age           job   marital  education default  balance  \\\n0           1   58    management   married   tertiary      no     2143   \n1           2   44    technician    single  secondary      no       29   \n2           3   33  entrepreneur   married  secondary      no        2   \n3           4   47   blue-collar   married        NaN      no     1506   \n4           5   33           NaN    single        NaN      no        1   \n...       ...  ...           ...       ...        ...     ...      ...   \n45206   45207   51    technician   married   tertiary      no      825   \n45207   45208   71       retired  divorced    primary      no     1729   \n45208   45209   72       retired   married  secondary      no     5715   \n45209   45210   57   blue-collar   married  secondary      no      668   \n45210   45211   37  entrepreneur   married  secondary      no     2971   \n\n      housing loan    contact  day month  duration  campaign  pdays  previous  \\\n0         yes   no    unknown    5   may       261         1     -1         0   \n1         yes   no    unknown    5   may       151         1     -1         0   \n2         yes  yes    unknown    5   may        76         1     -1         0   \n3         yes   no    unknown    5   may        92         1     -1         0   \n4          no   no    unknown    5   may       198         1     -1         0   \n...       ...  ...        ...  ...   ...       ...       ...    ...       ...   \n45206      no   no   cellular   17   nov       977         3     -1         0   \n45207      no   no   cellular   17   nov       456         2     -1         0   \n45208      no   no   cellular   17   nov      1127         5    184         3   \n45209      no   no  telephone   17   nov       508         4     -1         0   \n45210      no   no   cellular   17   nov       361         2    188        11   \n\n      poutcome    y  \n0      unknown   no  \n1      unknown   no  \n2      unknown   no  \n3      unknown   no  \n4      unknown   no  \n...        ...  ...  \n45206  unknown  yes  \n45207  unknown  yes  \n45208  success  yes  \n45209  unknown   no  \n45210    other   no  \n\n[45211 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>58</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>2143</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>261</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>44</td>\n      <td>technician</td>\n      <td>single</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>29</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>151</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>33</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2</td>\n      <td>yes</td>\n      <td>yes</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>76</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>47</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>NaN</td>\n      <td>no</td>\n      <td>1506</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>92</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>33</td>\n      <td>NaN</td>\n      <td>single</td>\n      <td>NaN</td>\n      <td>no</td>\n      <td>1</td>\n      <td>no</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>198</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45206</th>\n      <td>45207</td>\n      <td>51</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>825</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>977</td>\n      <td>3</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>1729</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>5715</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45209</th>\n      <td>45210</td>\n      <td>57</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>668</td>\n      <td>no</td>\n      <td>no</td>\n      <td>telephone</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>508</td>\n      <td>4</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>45210</th>\n      <td>45211</td>\n      <td>37</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2971</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>361</td>\n      <td>2</td>\n      <td>188</td>\n      <td>11</td>\n      <td>other</td>\n      <td>no</td>\n    </tr>\n  </tbody>\n</table>\n<p>45211 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":71},{"cell_type":"code","source":"print(newdataframe.columns)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:31:16.984356Z","iopub.execute_input":"2024-10-26T15:31:16.984974Z","iopub.status.idle":"2024-10-26T15:31:16.991314Z","shell.execute_reply.started":"2024-10-26T15:31:16.984920Z","shell.execute_reply":"2024-10-26T15:31:16.990209Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Index(['sl. no', 'age', 'job', 'marital', 'education', 'default', 'balance',\n       'housing', 'loan', 'contact', 'day', 'month', 'duration', 'campaign',\n       'pdays', 'previous', 'poutcome', 'y'],\n      dtype='object')\n","output_type":"stream"}],"execution_count":74},{"cell_type":"code","source":"newdataframe","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:31:19.237951Z","iopub.execute_input":"2024-10-26T15:31:19.238370Z","iopub.status.idle":"2024-10-26T15:31:19.263768Z","shell.execute_reply.started":"2024-10-26T15:31:19.238330Z","shell.execute_reply":"2024-10-26T15:31:19.262426Z"},"trusted":true},"outputs":[{"execution_count":75,"output_type":"execute_result","data":{"text/plain":"       sl. no  age           job   marital  education default  balance  \\\n0           1   58    management   married   tertiary      no     2143   \n1           2   44    technician    single  secondary      no       29   \n2           3   33  entrepreneur   married  secondary      no        2   \n3           4   47   blue-collar   married        NaN      no     1506   \n4           5   33           NaN    single        NaN      no        1   \n...       ...  ...           ...       ...        ...     ...      ...   \n45206   45207   51    technician   married   tertiary      no      825   \n45207   45208   71       retired  divorced    primary      no     1729   \n45208   45209   72       retired   married  secondary      no     5715   \n45209   45210   57   blue-collar   married  secondary      no      668   \n45210   45211   37  entrepreneur   married  secondary      no     2971   \n\n      housing loan    contact  day month  duration  campaign  pdays  previous  \\\n0         yes   no    unknown    5   may       261         1     -1         0   \n1         yes   no    unknown    5   may       151         1     -1         0   \n2         yes  yes    unknown    5   may        76         1     -1         0   \n3         yes   no    unknown    5   may        92         1     -1         0   \n4          no   no    unknown    5   may       198         1     -1         0   \n...       ...  ...        ...  ...   ...       ...       ...    ...       ...   \n45206      no   no   cellular   17   nov       977         3     -1         0   \n45207      no   no   cellular   17   nov       456         2     -1         0   \n45208      no   no   cellular   17   nov      1127         5    184         3   \n45209      no   no  telephone   17   nov       508         4     -1         0   \n45210      no   no   cellular   17   nov       361         2    188        11   \n\n      poutcome    y  \n0      unknown   no  \n1      unknown   no  \n2      unknown   no  \n3      unknown   no  \n4      unknown   no  \n...        ...  ...  \n45206  unknown  yes  \n45207  unknown  yes  \n45208  success  yes  \n45209  unknown   no  \n45210    other   no  \n\n[45211 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>58</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>2143</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>261</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>44</td>\n      <td>technician</td>\n      <td>single</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>29</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>151</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>33</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2</td>\n      <td>yes</td>\n      <td>yes</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>76</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>47</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>NaN</td>\n      <td>no</td>\n      <td>1506</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>92</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>33</td>\n      <td>NaN</td>\n      <td>single</td>\n      <td>NaN</td>\n      <td>no</td>\n      <td>1</td>\n      <td>no</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>198</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45206</th>\n      <td>45207</td>\n      <td>51</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>825</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>977</td>\n      <td>3</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>1729</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>5715</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45209</th>\n      <td>45210</td>\n      <td>57</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>668</td>\n      <td>no</td>\n      <td>no</td>\n      <td>telephone</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>508</td>\n      <td>4</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>45210</th>\n      <td>45211</td>\n      <td>37</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2971</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>361</td>\n      <td>2</td>\n      <td>188</td>\n      <td>11</td>\n      <td>other</td>\n      <td>no</td>\n    </tr>\n  </tbody>\n</table>\n<p>45211 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":75},{"cell_type":"code","source":"# Check unique values in the 'deposited?' column\nprint(newdataframe['y'].unique())\n\n# Check for any missing values in the 'job' and 'deposited?' columns\nprint(newdataframe[['job', 'y']].isna().sum())\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:31:55.496660Z","iopub.execute_input":"2024-10-26T15:31:55.497124Z","iopub.status.idle":"2024-10-26T15:31:55.521595Z","shell.execute_reply.started":"2024-10-26T15:31:55.497083Z","shell.execute_reply":"2024-10-26T15:31:55.520398Z"},"trusted":true},"outputs":[{"name":"stdout","text":"['no' 'yes']\njob    288\ny        0\ndtype: int64\n","output_type":"stream"}],"execution_count":77},{"cell_type":"code","source":"old_age = newdataframe[newdataframe['age'] > 61]","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:32:13.752847Z","iopub.execute_input":"2024-10-26T15:32:13.753608Z","iopub.status.idle":"2024-10-26T15:32:13.760406Z","shell.execute_reply.started":"2024-10-26T15:32:13.753562Z","shell.execute_reply":"2024-10-26T15:32:13.759342Z"},"trusted":true},"outputs":[],"execution_count":82},{"cell_type":"code","source":"old_age","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:32:15.969055Z","iopub.execute_input":"2024-10-26T15:32:15.970163Z","iopub.status.idle":"2024-10-26T15:32:15.994602Z","shell.execute_reply.started":"2024-10-26T15:32:15.970111Z","shell.execute_reply":"2024-10-26T15:32:15.993400Z"},"trusted":true},"outputs":[{"execution_count":83,"output_type":"execute_result","data":{"text/plain":"       sl. no  age         job   marital  education default  balance housing  \\\n28906   28907   66   housemaid   married  secondary      no     1929      no   \n28924   28925   62  technician   married  secondary      no      973      no   \n28965   28966   62     retired   married  secondary      no     1495      no   \n29158   29159   83     retired   married    primary      no      425      no   \n29261   29262   75     retired  divorced    primary      no       46      no   \n...       ...  ...         ...       ...        ...     ...      ...     ...   \n45191   45192   75     retired  divorced   tertiary      no     3810     yes   \n45195   45196   68     retired   married  secondary      no     1146      no   \n45204   45205   73     retired   married  secondary      no     2850      no   \n45207   45208   71     retired  divorced    primary      no     1729      no   \n45208   45209   72     retired   married  secondary      no     5715      no   \n\n      loan    contact  day month  duration  campaign  pdays  previous  \\\n28906   no   cellular    2   feb       169         1     -1         0   \n28924   no   cellular    2   feb       326         1     -1         0   \n28965   no   cellular    2   feb       265         1     -1         0   \n29158   no  telephone    2   feb       912         1     -1         0   \n29261   no   cellular    2   feb       294         1     -1         0   \n...    ...        ...  ...   ...       ...       ...    ...       ...   \n45191   no   cellular   16   nov       262         1    183         1   \n45195   no   cellular   16   nov       212         1    187         6   \n45204   no   cellular   17   nov       300         1     40         8   \n45207   no   cellular   17   nov       456         2     -1         0   \n45208   no   cellular   17   nov      1127         5    184         3   \n\n      poutcome    y  \n28906  unknown   no  \n28924  unknown  yes  \n28965  unknown  yes  \n29158  unknown   no  \n29261  unknown   no  \n...        ...  ...  \n45191  failure  yes  \n45195  success  yes  \n45204  failure  yes  \n45207  unknown  yes  \n45208  success  yes  \n\n[1041 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>28906</th>\n      <td>28907</td>\n      <td>66</td>\n      <td>housemaid</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>1929</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>169</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>28924</th>\n      <td>28925</td>\n      <td>62</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>973</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>326</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>28965</th>\n      <td>28966</td>\n      <td>62</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>1495</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>265</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>29158</th>\n      <td>29159</td>\n      <td>83</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>425</td>\n      <td>no</td>\n      <td>no</td>\n      <td>telephone</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>912</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>29261</th>\n      <td>29262</td>\n      <td>75</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>46</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>294</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45191</th>\n      <td>45192</td>\n      <td>75</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>3810</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>16</td>\n      <td>nov</td>\n      <td>262</td>\n      <td>1</td>\n      <td>183</td>\n      <td>1</td>\n      <td>failure</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45195</th>\n      <td>45196</td>\n      <td>68</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>1146</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>16</td>\n      <td>nov</td>\n      <td>212</td>\n      <td>1</td>\n      <td>187</td>\n      <td>6</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45204</th>\n      <td>45205</td>\n      <td>73</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2850</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>300</td>\n      <td>1</td>\n      <td>40</td>\n      <td>8</td>\n      <td>failure</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>1729</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>5715</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n  </tbody>\n</table>\n<p>1041 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":83},{"cell_type":"code","source":"old_age[old_age['y'] == 'yes']","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:32:18.579053Z","iopub.execute_input":"2024-10-26T15:32:18.579486Z","iopub.status.idle":"2024-10-26T15:32:18.605366Z","shell.execute_reply.started":"2024-10-26T15:32:18.579443Z","shell.execute_reply":"2024-10-26T15:32:18.604166Z"},"trusted":true},"outputs":[{"execution_count":84,"output_type":"execute_result","data":{"text/plain":"       sl. no  age         job   marital  education default  balance housing  \\\n28924   28925   62  technician   married  secondary      no      973      no   \n28965   28966   62     retired   married  secondary      no     1495      no   \n29464   29465   68     retired  divorced    primary      no      250      no   \n29865   29866   75     retired  divorced    primary      no     3881     yes   \n29961   29962   69     retired   married    primary      no      324      no   \n...       ...  ...         ...       ...        ...     ...      ...     ...   \n45191   45192   75     retired  divorced   tertiary      no     3810     yes   \n45195   45196   68     retired   married  secondary      no     1146      no   \n45204   45205   73     retired   married  secondary      no     2850      no   \n45207   45208   71     retired  divorced    primary      no     1729      no   \n45208   45209   72     retired   married  secondary      no     5715      no   \n\n      loan   contact  day month  duration  campaign  pdays  previous poutcome  \\\n28924   no  cellular    2   feb       326         1     -1         0  unknown   \n28965   no  cellular    2   feb       265         1     -1         0  unknown   \n29464   no  cellular    3   feb       360         1     -1         0  unknown   \n29865   no  cellular    4   feb       136         3     -1         0  unknown   \n29961   no  cellular    4   feb       136         4     -1         0  unknown   \n...    ...       ...  ...   ...       ...       ...    ...       ...      ...   \n45191   no  cellular   16   nov       262         1    183         1  failure   \n45195   no  cellular   16   nov       212         1    187         6  success   \n45204   no  cellular   17   nov       300         1     40         8  failure   \n45207   no  cellular   17   nov       456         2     -1         0  unknown   \n45208   no  cellular   17   nov      1127         5    184         3  success   \n\n         y  \n28924  yes  \n28965  yes  \n29464  yes  \n29865  yes  \n29961  yes  \n...    ...  \n45191  yes  \n45195  yes  \n45204  yes  \n45207  yes  \n45208  yes  \n\n[445 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>28924</th>\n      <td>28925</td>\n      <td>62</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>973</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>326</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>28965</th>\n      <td>28966</td>\n      <td>62</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>1495</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>265</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>29464</th>\n      <td>29465</td>\n      <td>68</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>250</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>3</td>\n      <td>feb</td>\n      <td>360</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>29865</th>\n      <td>29866</td>\n      <td>75</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>3881</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>4</td>\n      <td>feb</td>\n      <td>136</td>\n      <td>3</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>29961</th>\n      <td>29962</td>\n      <td>69</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>324</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>4</td>\n      <td>feb</td>\n      <td>136</td>\n      <td>4</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45191</th>\n      <td>45192</td>\n      <td>75</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>3810</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>16</td>\n      <td>nov</td>\n      <td>262</td>\n      <td>1</td>\n      <td>183</td>\n      <td>1</td>\n      <td>failure</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45195</th>\n      <td>45196</td>\n      <td>68</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>1146</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>16</td>\n      <td>nov</td>\n      <td>212</td>\n      <td>1</td>\n      <td>187</td>\n      <td>6</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45204</th>\n      <td>45205</td>\n      <td>73</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2850</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>300</td>\n      <td>1</td>\n      <td>40</td>\n      <td>8</td>\n      <td>failure</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>1729</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>5715</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n  </tbody>\n</table>\n<p>445 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":84},{"cell_type":"code","source":"old_age","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:32:21.113303Z","iopub.execute_input":"2024-10-26T15:32:21.113788Z","iopub.status.idle":"2024-10-26T15:32:21.139471Z","shell.execute_reply.started":"2024-10-26T15:32:21.113732Z","shell.execute_reply":"2024-10-26T15:32:21.138199Z"},"trusted":true},"outputs":[{"execution_count":85,"output_type":"execute_result","data":{"text/plain":"       sl. no  age         job   marital  education default  balance housing  \\\n28906   28907   66   housemaid   married  secondary      no     1929      no   \n28924   28925   62  technician   married  secondary      no      973      no   \n28965   28966   62     retired   married  secondary      no     1495      no   \n29158   29159   83     retired   married    primary      no      425      no   \n29261   29262   75     retired  divorced    primary      no       46      no   \n...       ...  ...         ...       ...        ...     ...      ...     ...   \n45191   45192   75     retired  divorced   tertiary      no     3810     yes   \n45195   45196   68     retired   married  secondary      no     1146      no   \n45204   45205   73     retired   married  secondary      no     2850      no   \n45207   45208   71     retired  divorced    primary      no     1729      no   \n45208   45209   72     retired   married  secondary      no     5715      no   \n\n      loan    contact  day month  duration  campaign  pdays  previous  \\\n28906   no   cellular    2   feb       169         1     -1         0   \n28924   no   cellular    2   feb       326         1     -1         0   \n28965   no   cellular    2   feb       265         1     -1         0   \n29158   no  telephone    2   feb       912         1     -1         0   \n29261   no   cellular    2   feb       294         1     -1         0   \n...    ...        ...  ...   ...       ...       ...    ...       ...   \n45191   no   cellular   16   nov       262         1    183         1   \n45195   no   cellular   16   nov       212         1    187         6   \n45204   no   cellular   17   nov       300         1     40         8   \n45207   no   cellular   17   nov       456         2     -1         0   \n45208   no   cellular   17   nov      1127         5    184         3   \n\n      poutcome    y  \n28906  unknown   no  \n28924  unknown  yes  \n28965  unknown  yes  \n29158  unknown   no  \n29261  unknown   no  \n...        ...  ...  \n45191  failure  yes  \n45195  success  yes  \n45204  failure  yes  \n45207  unknown  yes  \n45208  success  yes  \n\n[1041 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>28906</th>\n      <td>28907</td>\n      <td>66</td>\n      <td>housemaid</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>1929</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>169</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>28924</th>\n      <td>28925</td>\n      <td>62</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>973</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>326</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>28965</th>\n      <td>28966</td>\n      <td>62</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>1495</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>265</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>29158</th>\n      <td>29159</td>\n      <td>83</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>425</td>\n      <td>no</td>\n      <td>no</td>\n      <td>telephone</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>912</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>29261</th>\n      <td>29262</td>\n      <td>75</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>46</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>2</td>\n      <td>feb</td>\n      <td>294</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45191</th>\n      <td>45192</td>\n      <td>75</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>3810</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>16</td>\n      <td>nov</td>\n      <td>262</td>\n      <td>1</td>\n      <td>183</td>\n      <td>1</td>\n      <td>failure</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45195</th>\n      <td>45196</td>\n      <td>68</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>1146</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>16</td>\n      <td>nov</td>\n      <td>212</td>\n      <td>1</td>\n      <td>187</td>\n      <td>6</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45204</th>\n      <td>45205</td>\n      <td>73</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2850</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>300</td>\n      <td>1</td>\n      <td>40</td>\n      <td>8</td>\n      <td>failure</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>1729</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>5715</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n  </tbody>\n</table>\n<p>1041 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":85},{"cell_type":"code","source":"newdataframe","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:32:27.171556Z","iopub.execute_input":"2024-10-26T15:32:27.172184Z","iopub.status.idle":"2024-10-26T15:32:27.198975Z","shell.execute_reply.started":"2024-10-26T15:32:27.172134Z","shell.execute_reply":"2024-10-26T15:32:27.197633Z"},"trusted":true},"outputs":[{"execution_count":87,"output_type":"execute_result","data":{"text/plain":"       sl. no  age           job   marital  education default  balance  \\\n0           1   58    management   married   tertiary      no     2143   \n1           2   44    technician    single  secondary      no       29   \n2           3   33  entrepreneur   married  secondary      no        2   \n3           4   47   blue-collar   married        NaN      no     1506   \n4           5   33           NaN    single        NaN      no        1   \n...       ...  ...           ...       ...        ...     ...      ...   \n45206   45207   51    technician   married   tertiary      no      825   \n45207   45208   71       retired  divorced    primary      no     1729   \n45208   45209   72       retired   married  secondary      no     5715   \n45209   45210   57   blue-collar   married  secondary      no      668   \n45210   45211   37  entrepreneur   married  secondary      no     2971   \n\n      housing loan    contact  day month  duration  campaign  pdays  previous  \\\n0         yes   no    unknown    5   may       261         1     -1         0   \n1         yes   no    unknown    5   may       151         1     -1         0   \n2         yes  yes    unknown    5   may        76         1     -1         0   \n3         yes   no    unknown    5   may        92         1     -1         0   \n4          no   no    unknown    5   may       198         1     -1         0   \n...       ...  ...        ...  ...   ...       ...       ...    ...       ...   \n45206      no   no   cellular   17   nov       977         3     -1         0   \n45207      no   no   cellular   17   nov       456         2     -1         0   \n45208      no   no   cellular   17   nov      1127         5    184         3   \n45209      no   no  telephone   17   nov       508         4     -1         0   \n45210      no   no   cellular   17   nov       361         2    188        11   \n\n      poutcome    y  \n0      unknown   no  \n1      unknown   no  \n2      unknown   no  \n3      unknown   no  \n4      unknown   no  \n...        ...  ...  \n45206  unknown  yes  \n45207  unknown  yes  \n45208  success  yes  \n45209  unknown   no  \n45210    other   no  \n\n[45211 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>58</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>2143</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>261</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>44</td>\n      <td>technician</td>\n      <td>single</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>29</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>151</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>33</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2</td>\n      <td>yes</td>\n      <td>yes</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>76</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>47</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>NaN</td>\n      <td>no</td>\n      <td>1506</td>\n      <td>yes</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>92</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>33</td>\n      <td>NaN</td>\n      <td>single</td>\n      <td>NaN</td>\n      <td>no</td>\n      <td>1</td>\n      <td>no</td>\n      <td>no</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>198</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45206</th>\n      <td>45207</td>\n      <td>51</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>no</td>\n      <td>825</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>977</td>\n      <td>3</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>no</td>\n      <td>1729</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>5715</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>45209</th>\n      <td>45210</td>\n      <td>57</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>668</td>\n      <td>no</td>\n      <td>no</td>\n      <td>telephone</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>508</td>\n      <td>4</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>45210</th>\n      <td>45211</td>\n      <td>37</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>no</td>\n      <td>2971</td>\n      <td>no</td>\n      <td>no</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>361</td>\n      <td>2</td>\n      <td>188</td>\n      <td>11</td>\n      <td>other</td>\n      <td>no</td>\n    </tr>\n  </tbody>\n</table>\n<p>45211 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":87},{"cell_type":"code","source":"newdataframe","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:34:50.936350Z","iopub.execute_input":"2024-10-26T15:34:50.937343Z","iopub.status.idle":"2024-10-26T15:34:50.959925Z","shell.execute_reply.started":"2024-10-26T15:34:50.937296Z","shell.execute_reply":"2024-10-26T15:34:50.958606Z"},"trusted":true},"outputs":[{"execution_count":101,"output_type":"execute_result","data":{"text/plain":"       sl. no  age           job   marital  education  default  balance  \\\n0           1   58    management   married   tertiary        0     2143   \n1           2   44    technician    single  secondary        0       29   \n2           3   33  entrepreneur   married  secondary        0        2   \n3           4   47   blue-collar   married        NaN        0     1506   \n4           5   33           NaN    single        NaN        0        1   \n...       ...  ...           ...       ...        ...      ...      ...   \n45206   45207   51    technician   married   tertiary        0      825   \n45207   45208   71       retired  divorced    primary        0     1729   \n45208   45209   72       retired   married  secondary        0     5715   \n45209   45210   57   blue-collar   married  secondary        0      668   \n45210   45211   37  entrepreneur   married  secondary        0     2971   \n\n       housing  loan    contact  day month  duration  campaign  pdays  \\\n0            1     0    unknown    5   may       261         1     -1   \n1            1     0    unknown    5   may       151         1     -1   \n2            1     1    unknown    5   may        76         1     -1   \n3            1     0    unknown    5   may        92         1     -1   \n4            0     0    unknown    5   may       198         1     -1   \n...        ...   ...        ...  ...   ...       ...       ...    ...   \n45206        0     0   cellular   17   nov       977         3     -1   \n45207        0     0   cellular   17   nov       456         2     -1   \n45208        0     0   cellular   17   nov      1127         5    184   \n45209        0     0  telephone   17   nov       508         4     -1   \n45210        0     0   cellular   17   nov       361         2    188   \n\n       previous poutcome  deposited?  \n0             0  unknown           0  \n1             0  unknown           0  \n2             0  unknown           0  \n3             0  unknown           0  \n4             0  unknown           0  \n...         ...      ...         ...  \n45206         0  unknown           1  \n45207         0  unknown           1  \n45208         3  success           1  \n45209         0  unknown           0  \n45210        11    other           0  \n\n[45211 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>duration</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>deposited?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>58</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>0</td>\n      <td>2143</td>\n      <td>1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>261</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>44</td>\n      <td>technician</td>\n      <td>single</td>\n      <td>secondary</td>\n      <td>0</td>\n      <td>29</td>\n      <td>1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>151</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>33</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>76</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>47</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1506</td>\n      <td>1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>92</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>33</td>\n      <td>NaN</td>\n      <td>single</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>198</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45206</th>\n      <td>45207</td>\n      <td>51</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>0</td>\n      <td>825</td>\n      <td>0</td>\n      <td>0</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>977</td>\n      <td>3</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>0</td>\n      <td>1729</td>\n      <td>0</td>\n      <td>0</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>456</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>0</td>\n      <td>5715</td>\n      <td>0</td>\n      <td>0</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>1127</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>45209</th>\n      <td>45210</td>\n      <td>57</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>0</td>\n      <td>668</td>\n      <td>0</td>\n      <td>0</td>\n      <td>telephone</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>508</td>\n      <td>4</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>45210</th>\n      <td>45211</td>\n      <td>37</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>0</td>\n      <td>2971</td>\n      <td>0</td>\n      <td>0</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>361</td>\n      <td>2</td>\n      <td>188</td>\n      <td>11</td>\n      <td>other</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>45211 rows × 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":101},{"cell_type":"code","source":"newdataframe","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:37:18.758191Z","iopub.execute_input":"2024-10-26T15:37:18.758602Z","iopub.status.idle":"2024-10-26T15:37:18.783876Z","shell.execute_reply.started":"2024-10-26T15:37:18.758562Z","shell.execute_reply":"2024-10-26T15:37:18.782743Z"},"trusted":true},"outputs":[{"execution_count":119,"output_type":"execute_result","data":{"text/plain":"       sl. no  age           job   marital  education  default  balance  \\\n0           1   58    management   married   tertiary        0     2143   \n1           2   44    technician    single  secondary        0       29   \n2           3   33  entrepreneur   married  secondary        0        2   \n5           6   35    management   married   tertiary        0      231   \n6           7   28    management    single   tertiary        0      447   \n...       ...  ...           ...       ...        ...      ...      ...   \n45206   45207   51    technician   married   tertiary        0      825   \n45207   45208   71       retired  divorced    primary        0     1729   \n45208   45209   72       retired   married  secondary        0     5715   \n45209   45210   57   blue-collar   married  secondary        0      668   \n45210   45211   37  entrepreneur   married  secondary        0     2971   \n\n       housing  loan    contact  day month  campaign  pdays  previous  \\\n0            1     0    unknown    5   may         1     -1         0   \n1            1     0    unknown    5   may         1     -1         0   \n2            1     1    unknown    5   may         1     -1         0   \n5            1     0    unknown    5   may         1     -1         0   \n6            1     1    unknown    5   may         1     -1         0   \n...        ...   ...        ...  ...   ...       ...    ...       ...   \n45206        0     0   cellular   17   nov         3     -1         0   \n45207        0     0   cellular   17   nov         2     -1         0   \n45208        0     0   cellular   17   nov         5    184         3   \n45209        0     0  telephone   17   nov         4     -1         0   \n45210        0     0   cellular   17   nov         2    188        11   \n\n      poutcome  deposited?  \n0      unknown           0  \n1      unknown           0  \n2      unknown           0  \n5      unknown           0  \n6      unknown           0  \n...        ...         ...  \n45206  unknown           1  \n45207  unknown           1  \n45208  success           1  \n45209  unknown           0  \n45210    other           0  \n\n[43193 rows x 17 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>job</th>\n      <th>marital</th>\n      <th>education</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>contact</th>\n      <th>day</th>\n      <th>month</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>poutcome</th>\n      <th>deposited?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>58</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>0</td>\n      <td>2143</td>\n      <td>1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>44</td>\n      <td>technician</td>\n      <td>single</td>\n      <td>secondary</td>\n      <td>0</td>\n      <td>29</td>\n      <td>1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>33</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>35</td>\n      <td>management</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>0</td>\n      <td>231</td>\n      <td>1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7</td>\n      <td>28</td>\n      <td>management</td>\n      <td>single</td>\n      <td>tertiary</td>\n      <td>0</td>\n      <td>447</td>\n      <td>1</td>\n      <td>1</td>\n      <td>unknown</td>\n      <td>5</td>\n      <td>may</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>45206</th>\n      <td>45207</td>\n      <td>51</td>\n      <td>technician</td>\n      <td>married</td>\n      <td>tertiary</td>\n      <td>0</td>\n      <td>825</td>\n      <td>0</td>\n      <td>0</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>3</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>45207</th>\n      <td>45208</td>\n      <td>71</td>\n      <td>retired</td>\n      <td>divorced</td>\n      <td>primary</td>\n      <td>0</td>\n      <td>1729</td>\n      <td>0</td>\n      <td>0</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>45208</th>\n      <td>45209</td>\n      <td>72</td>\n      <td>retired</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>0</td>\n      <td>5715</td>\n      <td>0</td>\n      <td>0</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>5</td>\n      <td>184</td>\n      <td>3</td>\n      <td>success</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>45209</th>\n      <td>45210</td>\n      <td>57</td>\n      <td>blue-collar</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>0</td>\n      <td>668</td>\n      <td>0</td>\n      <td>0</td>\n      <td>telephone</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>4</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>45210</th>\n      <td>45211</td>\n      <td>37</td>\n      <td>entrepreneur</td>\n      <td>married</td>\n      <td>secondary</td>\n      <td>0</td>\n      <td>2971</td>\n      <td>0</td>\n      <td>0</td>\n      <td>cellular</td>\n      <td>17</td>\n      <td>nov</td>\n      <td>2</td>\n      <td>188</td>\n      <td>11</td>\n      <td>other</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>43193 rows × 17 columns</p>\n</div>"},"metadata":{}}],"execution_count":119},{"cell_type":"code","source":"newdataframe.rename(columns = {'y':'deposited?'}, inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:37:22.431480Z","iopub.execute_input":"2024-10-26T15:37:22.432642Z","iopub.status.idle":"2024-10-26T15:37:22.439064Z","shell.execute_reply.started":"2024-10-26T15:37:22.432577Z","shell.execute_reply":"2024-10-26T15:37:22.437763Z"},"trusted":true},"outputs":[],"execution_count":120},{"cell_type":"code","source":"print(newdataframe.columns)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:37:25.630326Z","iopub.execute_input":"2024-10-26T15:37:25.630767Z","iopub.status.idle":"2024-10-26T15:37:25.637618Z","shell.execute_reply.started":"2024-10-26T15:37:25.630724Z","shell.execute_reply":"2024-10-26T15:37:25.636370Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Index(['sl. no', 'age', 'job', 'marital', 'education', 'default', 'balance',\n       'housing', 'loan', 'contact', 'day', 'month', 'campaign', 'pdays',\n       'previous', 'poutcome', 'deposited?'],\n      dtype='object')\n","output_type":"stream"}],"execution_count":121},{"cell_type":"code","source":"x=newdataframe.drop(['deposited?'],axis=1)\ny=newdataframe['deposited?']","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:37:30.911467Z","iopub.execute_input":"2024-10-26T15:37:30.912399Z","iopub.status.idle":"2024-10-26T15:37:30.921914Z","shell.execute_reply.started":"2024-10-26T15:37:30.912351Z","shell.execute_reply":"2024-10-26T15:37:30.920774Z"},"trusted":true},"outputs":[],"execution_count":124},{"cell_type":"code","source":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\n\nx = pd.get_dummies(x)\nx.columns = [col.lower() for col in x.columns]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, random_state=42, test_size=0.3, stratify=y)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:37:33.015768Z","iopub.execute_input":"2024-10-26T15:37:33.016196Z","iopub.status.idle":"2024-10-26T15:37:33.259593Z","shell.execute_reply.started":"2024-10-26T15:37:33.016156Z","shell.execute_reply":"2024-10-26T15:37:33.258231Z"},"trusted":true},"outputs":[],"execution_count":125},{"cell_type":"code","source":"x = pd.get_dummies(x)\nx.columns=[x.lower() for x in x.columns]\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42,test_size=0.3, stratify=y)","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:37:36.382580Z","iopub.execute_input":"2024-10-26T15:37:36.383024Z","iopub.status.idle":"2024-10-26T15:37:36.424675Z","shell.execute_reply.started":"2024-10-26T15:37:36.382983Z","shell.execute_reply":"2024-10-26T15:37:36.423752Z"},"trusted":true},"outputs":[],"execution_count":126},{"cell_type":"code","source":"df_train = x_train.copy()\ndf_train['deposited?'] = y_train\ndf_train.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-26T15:37:38.191681Z","iopub.execute_input":"2024-10-26T15:37:38.192658Z","iopub.status.idle":"2024-10-26T15:37:38.229005Z","shell.execute_reply.started":"2024-10-26T15:37:38.192597Z","shell.execute_reply":"2024-10-26T15:37:38.227633Z"},"trusted":true},"outputs":[{"execution_count":127,"output_type":"execute_result","data":{"text/plain":"       sl. no  age  default  balance  housing  loan  day  campaign  pdays  \\\n8279     8280   35        0      532        1     0    2         1     -1   \n35520   35521   57        0     1577        1     0    7         2    357   \n41793   41794   32        0     2688        0     0   14         1     57   \n11500   11501   46        0     2441        0     0   19         2     -1   \n22837   22838   34        0      280        0     0   25        11     -1   \n\n       previous  ...  month_mar  month_may  month_nov  month_oct  month_sep  \\\n8279          0  ...      False      False      False      False      False   \n35520         1  ...      False       True      False      False      False   \n41793         1  ...      False      False      False       True      False   \n11500         0  ...      False      False      False      False      False   \n22837         0  ...      False      False      False      False      False   \n\n       poutcome_failure  poutcome_other  poutcome_success  poutcome_unknown  \\\n8279              False           False             False              True   \n35520             False            True             False             False   \n41793              True           False             False             False   \n11500             False           False             False              True   \n22837             False           False             False              True   \n\n       deposited?  \n8279            0  \n35520           0  \n41793           1  \n11500           0  \n22837           0  \n\n[5 rows x 47 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl. no</th>\n      <th>age</th>\n      <th>default</th>\n      <th>balance</th>\n      <th>housing</th>\n      <th>loan</th>\n      <th>day</th>\n      <th>campaign</th>\n      <th>pdays</th>\n      <th>previous</th>\n      <th>...</th>\n      <th>month_mar</th>\n      <th>month_may</th>\n      <th>month_nov</th>\n      <th>month_oct</th>\n      <th>month_sep</th>\n      <th>poutcome_failure</th>\n      <th>poutcome_other</th>\n      <th>poutcome_success</th>\n      <th>poutcome_unknown</th>\n      <th>deposited?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>8279</th>\n      <td>8280</td>\n      <td>35</td>\n      <td>0</td>\n      <td>532</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>35520</th>\n      <td>35521</td>\n      <td>57</td>\n      <td>0</td>\n      <td>1577</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2</td>\n      <td>357</td>\n      <td>1</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>41793</th>\n      <td>41794</td>\n      <td>32</td>\n      <td>0</td>\n      <td>2688</td>\n      <td>0</td>\n      <td>0</td>\n      <td>14</td>\n      <td>1</td>\n      <td>57</td>\n      <td>1</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>11500</th>\n      <td>11501</td>\n      <td>46</td>\n      <td>0</td>\n      <td>2441</td>\n      <td>0</td>\n      <td>0</td>\n      <td>19</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22837</th>\n      <td>22838</td>\n      <td>34</td>\n      <td>0</td>\n      <td>280</td>\n      <td>0</td>\n      <td>0</td>\n      <td>25</td>\n      <td>11</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 47 columns</p>\n</div>"},"metadata":{}}],"execution_count":127},{"cell_type":"code","source":"classes=df_train['deposited?'].value_counts()\nnormal_share=round(classes[0]/df_train['deposited?'].count()*100,2)\nfraud_share=round(classes[1]/df_train['deposited?'].count()*100, 2)\nprint(\"Non-deposited? : {} %\".format(normal_share))\nprint(\"deposited? : {} %\".format(fraud_share))","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:27:51.361684Z","iopub.execute_input":"2024-10-26T10:27:51.362099Z","iopub.status.idle":"2024-10-26T10:27:51.380983Z","shell.execute_reply.started":"2024-10-26T10:27:51.362061Z","shell.execute_reply":"2024-10-26T10:27:51.379497Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Non-deposited? : 88.3 %\ndeposited? : 11.7 %\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_30/2674631261.py:2: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  normal_share=round(classes[0]/df_train['deposited?'].count()*100,2)\n/tmp/ipykernel_30/2674631261.py:3: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  fraud_share=round(classes[1]/df_train['deposited?'].count()*100, 2)\n","output_type":"stream"}],"execution_count":41},{"cell_type":"code","source":"x_train=df_train.drop(['deposited?'],axis=1)\ny_train=df_train['deposited?']","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:28:52.955454Z","iopub.execute_input":"2024-10-26T10:28:52.955917Z","iopub.status.idle":"2024-10-26T10:28:52.964548Z","shell.execute_reply.started":"2024-10-26T10:28:52.955875Z","shell.execute_reply":"2024-10-26T10:28:52.963221Z"},"trusted":true},"outputs":[],"execution_count":47},{"cell_type":"code","source":"def evaluation_metrics(y_test, y_pre, target_names):\n    #scores\n    print(\"Accuracy :\",accuracy_score(y_test,y_pre))\n    print(\"Precision :\",precision_score(y_test,y_pre))\n    print(\"Recall :\",recall_score(y_test,y_pre))\n    print(\"F1 Score :\",f1_score(y_test,y_pre))\n\n    print(classification_report(y_test, y_pre, target_names=target_names))\n\n    #AUC\n    fpr, tpr, _ = roc_curve(y_test,  y_pre)\n    auc = roc_auc_score(y_test, y_pre)\n    print(\"AUC :\", auc)\n\n    #ROC\n    plt.plot(fpr,tpr,label=\"uc={:.3f})\".format(auc))\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlabel('False positive rate')\n    plt.ylabel('True positive rate')\n    plt.title('ROC curve')\n    plt.legend(loc=4)\n    plt.show()\n\n    #CM matrix\n    matrix = confusion_matrix(y_test, y_pre)\n    cm = pd.DataFrame(matrix, index=target_names, columns=target_names)\n\n    sns.heatmap(cm, annot=True, cbar=None, cmap=\"Blues\", fmt = 'g')\n    plt.title(\"Confusion Matrix\"), plt.tight_layout()\n    plt.ylabel(\"True Class\"), plt.xlabel(\"Predicted Class\")\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:39:45.560958Z","iopub.execute_input":"2024-10-26T10:39:45.561422Z","iopub.status.idle":"2024-10-26T10:39:45.572963Z","shell.execute_reply.started":"2024-10-26T10:39:45.561380Z","shell.execute_reply":"2024-10-26T10:39:45.570676Z"},"trusted":true},"outputs":[],"execution_count":86},{"cell_type":"code","source":"target_names=['No Deposited', 'Deposited']","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:29:01.586730Z","iopub.execute_input":"2024-10-26T10:29:01.587189Z","iopub.status.idle":"2024-10-26T10:29:01.592737Z","shell.execute_reply.started":"2024-10-26T10:29:01.587149Z","shell.execute_reply":"2024-10-26T10:29:01.591325Z"},"trusted":true},"outputs":[],"execution_count":50},{"cell_type":"markdown","source":"# Logistic Regression","metadata":{}},{"cell_type":"code","source":"from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score\n\ndef evaluation_metrics(y_test, y_pre, target_names):\n    # scores\n    print(\"Accuracy :\", accuracy_score(y_test, y_pre))\n    print(\"Precision :\", precision_score(y_test, y_pre, pos_label='yes'))\n    print(\"Recall :\", recall_score(y_test, y_pre, pos_label='yes'))\n    print(\"F1 Score :\", f1_score(y_test, y_pre, pos_label='yes'))\n\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:39:31.458037Z","iopub.execute_input":"2024-10-26T10:39:31.458520Z","iopub.status.idle":"2024-10-26T10:39:31.465764Z","shell.execute_reply.started":"2024-10-26T10:39:31.458479Z","shell.execute_reply":"2024-10-26T10:39:31.464393Z"},"trusted":true},"outputs":[],"execution_count":84},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, accuracy_score, roc_auc_score, roc_curve, auc\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndef log(x_train,x_test,y_train,y_test):\n    model=LogisticRegression()\n    model.fit(x_train,y_train)\n    y_pre=model.predict(x_test)\n    evaluation_metrics(y_test, y_pre, target_names)\n\nlog(x_train,x_test,y_train,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:29:54.585509Z","iopub.execute_input":"2024-10-26T10:29:54.586004Z","iopub.status.idle":"2024-10-26T10:29:55.974819Z","shell.execute_reply.started":"2024-10-26T10:29:54.585959Z","shell.execute_reply":"2024-10-26T10:29:55.973304Z"},"trusted":true},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning:\n\nlbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n\n","output_type":"stream"},{"name":"stdout","text":"Accuracy : 0.8883810085520495\nPrecision : 0.5516265912305516\nRecall : 0.24574669187145556\nF1 Score : 0.3400174367916303\n","output_type":"stream"}],"execution_count":55},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, accuracy_score, roc_auc_score, roc_curve, auc\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndef evaluation_metrics(y_test, y_pre, y_proba, target_names):\n    # scores\n    report = classification_report(y_test, y_pre, target_names=target_names)\n    print(report)\n    accuracy = accuracy_score(y_test, y_pre)\n    print(f\"Accuracy: {accuracy}\")\n\n    # AUC\n    auc_score = roc_auc_score(y_test, y_proba)\n    print(f\"AUC: {auc_score}\")\n\ndef log(x_train, x_test, y_train, y_test):\n    model = LogisticRegression()\n    model.fit(x_train, y_train)\n    y_pre = model.predict(x_test)\n    y_proba = model.predict_proba(x_test)[:, 1]  # Get probability scores for the positive class\n    evaluation_metrics(y_test, y_pre, y_proba, target_names=['No Deposited', 'Deposited'])\n    \n    # ROC Curve\n    fpr, tpr, _ = roc_curve(y_test, y_proba, pos_label='Deposited')\n    roc_auc = auc(fpr, tpr)\n    plt.figure(figsize=(10, 6))\n    plt.plot(fpr, tpr, label=f'Logistic Regression (AUC = {roc_auc:.2f})')\n    plt.plot([0, 1], [0, 1], linestyle='--', color='r')\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('ROC Curve for Logistic Regression')\n    plt.legend()\n    plt.grid(True)\n    plt.show()\n\n# Example usage\nlog(x_train, x_test, y_train, y_test)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:30:44.183361Z","iopub.execute_input":"2024-10-26T10:30:44.183830Z","iopub.status.idle":"2024-10-26T10:30:45.956873Z","shell.execute_reply.started":"2024-10-26T10:30:44.183788Z","shell.execute_reply":"2024-10-26T10:30:45.955406Z"},"trusted":true},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning:\n\nlbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n\n","output_type":"stream"},{"name":"stdout","text":"              precision    recall  f1-score   support\n\nNo Deposited       0.91      0.97      0.94     11977\n   Deposited       0.55      0.25      0.34      1587\n\n    accuracy                           0.89     13564\n   macro avg       0.73      0.61      0.64     13564\nweighted avg       0.87      0.89      0.87     13564\n\nAccuracy: 0.8883810085520495\nAUC: 0.8054506276706893\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/metrics/_ranking.py:1029: UndefinedMetricWarning:\n\nNo positive samples in y_true, true positive value should be meaningless\n\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":58},{"cell_type":"code","source":"from sklearn.metrics import classification_report, accuracy_score, roc_auc_score\nimport numpy as np\n\ndef evaluation_metrics(y_test, y_pre, y_proba, target_names):\n    # scores\n    report = classification_report(y_test, y_pre, target_names=target_names)\n    print(report)\n    accuracy = accuracy_score(y_test, y_pre)\n    print(f\"Accuracy: {accuracy}\")\n\n    # AUC\n    auc_score = roc_auc_score(y_test, y_proba)\n    print(f\"AUC: {auc_score}\")\n\ndef log(x_train, x_test, y_train, y_test):\n    model = LogisticRegression()\n    model.fit(x_train, y_train)\n    y_pre = model.predict(x_test)\n    y_proba = model.predict_proba(x_test)[:, 1]  # Get probability scores for the positive class\n    evaluation_metrics(y_test, y_pre, y_proba, target_names=['No Deposited', 'Deposited'])\n\n# Classification Report\nreport = classification_report(y_test, y_pre, target_names=['No Deposited', 'Deposited'])\nprint(report)\n\n# Accuracy\naccuracy = accuracy_score(y_test, y_pre)\nprint(f\"Accuracy: {accuracy}\")\n\n# AUC\nauc_score = roc_auc_score(y_test, y_proba)\nprint(f\"AUC: {auc_score}\")\n\n# Display the results\nresults = classification_report(y_test, y_pre, target_names=['No Deposited', 'Deposited'], output_dict=True)\nprint(f\"Precision (No Deposited): {results['No Deposited']['precision']}\")\nprint(f\"Recall (No Deposited): {results['No Deposited']['recall']}\")\nprint(f\"F1 Score (No Deposited): {results['No Deposited']['f1-score']}\")\nprint(f\"Support (No Deposited): {results['No Deposited']['support']}\")\nprint(f\"Precision (Deposited): {results['Deposited']['precision']}\")\nprint(f\"Recall (Deposited): {results['Deposited']['recall']}\")\nprint(f\"F1 Score (Deposited): {results['Deposited']['f1-score']}\")\nprint(f\"Support (Deposited): {results['Deposited']['support']}\")\nprint(f\"Accuracy: {accuracy}\")\nprint(f\"Macro Avg: {results['macro avg']}\")\nprint(f\"Weighted Avg: {results['weighted avg']}\")\nprint(f\"AUC: {auc_score}\")\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:31:24.696176Z","iopub.execute_input":"2024-10-26T10:31:24.696642Z","iopub.status.idle":"2024-10-26T10:31:24.745543Z","shell.execute_reply.started":"2024-10-26T10:31:24.696602Z","shell.execute_reply":"2024-10-26T10:31:24.743293Z"},"trusted":true},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[63], line 23\u001b[0m\n\u001b[1;32m     20\u001b[0m     evaluation_metrics(y_test, y_pre, y_proba, target_names\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mNo Deposited\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mDeposited\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[1;32m     22\u001b[0m \u001b[38;5;66;03m# Classification Report\u001b[39;00m\n\u001b[0;32m---> 23\u001b[0m report \u001b[38;5;241m=\u001b[39m classification_report(y_test, \u001b[43my_pre\u001b[49m, target_names\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mNo Deposited\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mDeposited\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[1;32m     24\u001b[0m \u001b[38;5;28mprint\u001b[39m(report)\n\u001b[1;32m     26\u001b[0m \u001b[38;5;66;03m# Accuracy\u001b[39;00m\n","\u001b[0;31mNameError\u001b[0m: name 'y_pre' is not defined"],"ename":"NameError","evalue":"name 'y_pre' is not defined","output_type":"error"}],"execution_count":63},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import precision_recall_curve, roc_curve, auc\nimport matplotlib.pyplot as plt\n\ndef log(x_train, x_test, y_train, y_test):\n    model = LogisticRegression()\n    model.fit(x_train, y_train)\n    y_proba = model.predict_proba(x_test)[:, 1]  # Get probability scores for the positive class\n    return y_proba\n\n# Get probability scores\ny_proba = log(x_train, x_test, y_train, y_test)\n\n# Precision-Recall Curve\nprecision, recall, _ = precision_recall_curve(y_test, y_proba, pos_label='yes')\nplt.figure(figsize=(10, 6))\nplt.plot(recall, precision, marker='.', label='Logistic Regression')\nplt.xlabel('Recall')\nplt.ylabel('Precision')\nplt.title('Precision-Recall Curve')\nplt.legend()\nplt.grid(True)\nplt.show()\n\n# ROC Curve\nfpr, tpr, _ = roc_curve(y_test, y_proba, pos_label='yes')\nroc_auc = auc(fpr, tpr)\nplt.figure(figsize=(10, 6))\nplt.plot(fpr, tpr, label=f'Logistic Regression (AUC = {roc_auc:.2f})')\nplt.plot([0, 1], [0, 1], linestyle='--', color='r')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC Curve')\nplt.legend()\nplt.grid(True)\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:31:31.732067Z","iopub.execute_input":"2024-10-26T10:31:31.733119Z","iopub.status.idle":"2024-10-26T10:31:33.103636Z","shell.execute_reply.started":"2024-10-26T10:31:31.733054Z","shell.execute_reply":"2024-10-26T10:31:33.102421Z"},"trusted":true},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning:\n\nlbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":64},{"cell_type":"code","source":"x_train=df_train.drop(['deposited?'],axis=1)\ny_train=df_train['deposited?']","metadata":{"execution":{"iopub.status.busy":"2024-10-25T11:51:14.451482Z","iopub.status.idle":"2024-10-25T11:51:14.451954Z","shell.execute_reply.started":"2024-10-25T11:51:14.451692Z","shell.execute_reply":"2024-10-25T11:51:14.451744Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ndef log(x_train, x_test, y_train, y_test):\n    model = LogisticRegression()\n    model.fit(x_train, y_train)\n    y_pre = model.predict(x_test)\n    return y_pre\n\n# Get predictions\ny_pre = log(x_train, x_test, y_train, y_test)\n\n# Compute confusion matrix\ncm = confusion_matrix(y_test, y_pre, labels=['yes', 'no'])\n\n# Plot confusion matrix\nplt.figure(figsize=(10, 6))\nsns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['yes', 'no'], yticklabels=['yes', 'no'])\nplt.title('Confusion Matrix')\nplt.xlabel('Predicted')\nplt.ylabel('Actual')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:32:58.070798Z","iopub.execute_input":"2024-10-26T10:32:58.071344Z","iopub.status.idle":"2024-10-26T10:32:59.186167Z","shell.execute_reply.started":"2024-10-26T10:32:58.071301Z","shell.execute_reply":"2024-10-26T10:32:59.184648Z"},"trusted":true},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning:\n\nlbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 2 Axes>","image/png":""},"metadata":{}}],"execution_count":65},{"cell_type":"markdown","source":"# RidgeClassifier","metadata":{}},{"cell_type":"code","source":"","metadata":{},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def evaluation_metrics(y_test, y_pre, target_names):\n    #scores\n    print(\"Accuracy :\",accuracy_score(y_test,y_pre))\n    print(\"Precision :\",precision_score(y_test,y_pre))\n    print(\"Recall :\",recall_score(y_test,y_pre))\n    print(\"F1 Score :\",f1_score(y_test,y_pre))\n\n    print(classification_report(y_test, y_pre, target_names=target_names))\n\n    #AUC\n    fpr, tpr, _ = roc_curve(y_test,  y_pre)\n    auc = roc_auc_score(y_test, y_pre)\n    print(\"AUC :\", auc)\n\n    #ROC\n    plt.plot(fpr,tpr,label=\"uc={:.3f})\".format(auc))\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlabel('False positive rate')\n    plt.ylabel('True positive rate')\n    plt.title('ROC curve')\n    plt.legend(loc=4)\n    plt.show()\n\n    #CM matrix\n    matrix = confusion_matrix(y_test, y_pre)\n    cm = pd.DataFrame(matrix, index=target_names, columns=target_names)\n\n    sns.heatmap(cm, annot=True, cbar=None, cmap=\"Blues\", fmt = 'g')\n    plt.title(\"Confusion Matrix\"), plt.tight_layout()\n    plt.ylabel(\"True Class\"), plt.xlabel(\"Predicted Class\")\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:33:04.734865Z","iopub.execute_input":"2024-10-26T10:33:04.735441Z","iopub.status.idle":"2024-10-26T10:33:04.746828Z","shell.execute_reply.started":"2024-10-26T10:33:04.735396Z","shell.execute_reply":"2024-10-26T10:33:04.745405Z"},"trusted":true},"outputs":[],"execution_count":66},{"cell_type":"code","source":"def Ridge(x_train,x_test,y_train,y_test):\n    #train the model\n    model = RidgeClassifier(random_state=2)\n    model.fit(x_train, y_train)\n    #predictions\n    y_pre = model.predict(x_test)\n    evaluation_metrics(y_test, y_pre, target_names)","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:33:09.683610Z","iopub.execute_input":"2024-10-26T10:33:09.684049Z","iopub.status.idle":"2024-10-26T10:33:09.690595Z","shell.execute_reply.started":"2024-10-26T10:33:09.684008Z","shell.execute_reply":"2024-10-26T10:33:09.689082Z"},"trusted":true},"outputs":[],"execution_count":67},{"cell_type":"code","source":"print(y_test.unique())\n","metadata":{"execution":{"iopub.status.busy":"2024-10-25T11:51:14.459713Z","iopub.status.idle":"2024-10-25T11:51:14.460306Z","shell.execute_reply.started":"2024-10-25T11:51:14.460016Z","shell.execute_reply":"2024-10-25T11:51:14.460045Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.linear_model import RidgeClassifier\nfrom sklearn.metrics import classification_report, accuracy_score, roc_auc_score, roc_curve, auc, confusion_matrix, precision_score, recall_score, f1_score\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndef evaluation_metrics(y_test, y_pre, target_names):\n    # Scores\n    report = classification_report(y_test, y_pre, target_names=target_names)\n    print(report)\n    accuracy = accuracy_score(y_test, y_pre)\n    print(f\"Accuracy: {accuracy}\")\n    \n    # Precision, Recall, F1 Score\n    print(f\"Precision: {precision_score(y_test, y_pre, pos_label='yes')}\")\n    print(f\"Recall: {recall_score(y_test, y_pre, pos_label='yes')}\")\n    print(f\"F1 Score: {f1_score(y_test, y_pre, pos_label='yes')}\")\n\ndef Ridge(x_train, x_test, y_train, y_test):\n    # Train the model\n    model = RidgeClassifier(random_state=2)\n    model.fit(x_train, y_train)\n    # Predictions\n    y_pre = model.predict(x_test)\n    \n    # Print evaluation metrics\n    evaluation_metrics(y_test, y_pre, target_names=['no', 'yes'])\n    \n    # Compute AUC\n    y_scores = model.decision_function(x_test)\n    auc_score = roc_auc_score(y_test, y_scores)\n    print(f\"AUC: {auc_score}\")\n    \n    # Plot confusion matrix\n    unique_labels = y_test.unique()\n    cm = confusion_matrix(y_test, y_pre, labels=unique_labels)\n    plt.figure(figsize=(10, 6))\n    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=unique_labels, yticklabels=unique_labels)\n    plt.title('Confusion Matrix for Ridge Classifier')\n    plt.xlabel('Predicted')\n    plt.ylabel('Actual')\n    plt.show()\n    \n    # ROC Curve\n    fpr, tpr, _ = roc_curve(y_test, y_scores, pos_label='yes')\n    roc_auc = auc(fpr, tpr)\n    plt.figure(figsize=(10, 6))\n    plt.plot(fpr, tpr, label=f'Ridge Classifier (AUC = {roc_auc:.2f})')\n    plt.plot([0, 1], [0, 1], linestyle='--', color='r')\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('ROC Curve for Ridge Classifier')\n    plt.legend()\n    plt.grid(True)\n    plt.show()\n\n# Example usage\nRidge(x_train, x_test, y_train, y_test)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:33:13.092883Z","iopub.execute_input":"2024-10-26T10:33:13.093349Z","iopub.status.idle":"2024-10-26T10:33:14.997665Z","shell.execute_reply.started":"2024-10-26T10:33:13.093306Z","shell.execute_reply":"2024-10-26T10:33:14.996162Z"},"trusted":true},"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n          no       0.91      0.98      0.95     11977\n         yes       0.68      0.30      0.42      1587\n\n    accuracy                           0.90     13564\n   macro avg       0.80      0.64      0.68     13564\nweighted avg       0.89      0.90      0.88     13564\n\nAccuracy: 0.9012828074314362\nPrecision: 0.6766381766381766\nRecall: 0.29930686830497794\nF1 Score: 0.4150283966797728\nAUC: 0.9243818979025068\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 2 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":68},{"cell_type":"markdown","source":"# Random forest Classifier","metadata":{}},{"cell_type":"code","source":"def RF(x_train,x_test,y_train,y_test):\n  #train the model\n  model = RandomForestClassifier(random_state=2)\n  model.fit(x_train, y_train)\n  #predictions\n  y_pre = model.predict(x_test)\n  evaluation_metrics(y_test, y_pre, target_names)","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:58:17.403797Z","iopub.execute_input":"2024-10-26T10:58:17.404252Z","iopub.status.idle":"2024-10-26T10:58:17.411010Z","shell.execute_reply.started":"2024-10-26T10:58:17.404211Z","shell.execute_reply":"2024-10-26T10:58:17.409618Z"},"trusted":true},"outputs":[],"execution_count":109},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, classification_report, roc_curve, roc_auc_score, confusion_matrix\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\n\ndef evaluation_metrics(y_test, y_pre, y_proba, target_names):\n    # Scores\n    print(\"Accuracy:\", accuracy_score(y_test, y_pre))\n    print(\"Precision:\", precision_score(y_test, y_pre, pos_label='Deposited'))\n    print(\"Recall:\", recall_score(y_test, y_pre, pos_label='Deposited'))\n    print(\"F1 Score:\", f1_score(y_test, y_pre, pos_label='Deposited'))\n    print(classification_report(y_test, y_pre, target_names=target_names))\n    \n    # AUC\n    fpr, tpr, _ = roc_curve(y_test, y_proba, pos_label='Deposited')\n    auc = roc_auc_score(y_test, y_proba)\n    print(\"AUC:\", auc)\n    \n    # ROC\n    plt.plot(fpr, tpr, label=\"AUC={:.3f}\".format(auc))\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('ROC Curve')\n    plt.legend(loc=4)\n    plt.show()\n    \n    # Confusion Matrix\n    matrix = confusion_matrix(y_test, y_pre)\n    cm = pd.DataFrame(matrix, index=target_names, columns=target_names)\n    sns.heatmap(cm, annot=True, cbar=None, cmap=\"Blues\", fmt='g')\n    plt.title(\"Confusion Matrix\")\n    plt.tight_layout()\n    plt.ylabel(\"True Class\")\n    plt.xlabel(\"Predicted Class\")\n    plt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T11:04:48.175466Z","iopub.execute_input":"2024-10-26T11:04:48.176994Z","iopub.status.idle":"2024-10-26T11:04:48.188757Z","shell.execute_reply.started":"2024-10-26T11:04:48.176943Z","shell.execute_reply":"2024-10-26T11:04:48.187477Z"},"trusted":true},"outputs":[],"execution_count":117},{"cell_type":"code","source":"from sklearn.metrics import classification_report, accuracy_score, roc_auc_score, roc_curve, auc, confusion_matrix\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\n\n\ndef evaluation_metrics(y_test, y_pre, y_proba, target_names):\n    # Print Scores\n    print(\"Accuracy:\", accuracy_score(y_test, y_pre))\n    print(\"Precision:\", precision_score(y_test, y_pre, pos_label='Deposited'))\n    print(\"Recall:\", recall_score(y_test, y_pre, pos_label='Deposited'))\n    print(\"F1 Score:\", f1_score(y_test, y_pre, pos_label='Deposited'))\n    print(classification_report(y_test, y_pre, target_names=target_names))\n    \n    # AUC\n    fpr, tpr, _ = roc_curve(y_test, y_proba, pos_label='Deposited')\n    auc_score = roc_auc_score(y_test, y_proba)\n    print(\"AUC:\", auc_score)\n    \n    # ROC Curve\n    plt.figure(figsize=(10, 6))\n    plt.plot(fpr, tpr, label=f\"AUC = {auc_score:.3f}\")\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('ROC Curve')\n    plt.legend(loc='lower right')\n    plt.grid(True)\n    plt.show()\n    \n    # Confusion Matrix\n    cm = confusion_matrix(y_test, y_pre, labels=['Deposited', 'No Deposited'])\n    cm_df = pd.DataFrame(cm, index=['Deposited', 'No Deposited'], columns=['Deposited', 'No Deposited'])\n    plt.figure(figsize=(10, 6))\n    sns.heatmap(cm_df, annot=True, fmt='d', cmap='Blues')\n    plt.title('Confusion Matrix')\n    plt.xlabel('Predicted')\n    plt.ylabel('Actual')\n    plt.show()\n\n# Ensure your model fits and predictions are done before calling evaluation_metrics\n# Example usage:\n# RF(x_train, x_test, y_train, y_test) should call evaluation_metrics with y_test, y_pre, y_proba\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T11:07:30.283531Z","iopub.execute_input":"2024-10-26T11:07:30.283993Z","iopub.status.idle":"2024-10-26T11:07:30.300941Z","shell.execute_reply.started":"2024-10-26T11:07:30.283924Z","shell.execute_reply":"2024-10-26T11:07:30.299669Z"},"trusted":true},"outputs":[],"execution_count":125},{"cell_type":"code","source":"def RF(x_train,x_test,y_train,y_test):\n  #train the model\n  model = RandomForestClassifier(random_state=2)\n  model.fit(x_train, y_train)\n  #predictions\n  y_pre = model.predict(x_test)\n  evaluation_metrics(y_test, y_pre, target_names)","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:41:42.169150Z","iopub.execute_input":"2024-10-26T10:41:42.170135Z","iopub.status.idle":"2024-10-26T10:41:42.175843Z","shell.execute_reply.started":"2024-10-26T10:41:42.170088Z","shell.execute_reply":"2024-10-26T10:41:42.174622Z"},"trusted":true},"outputs":[],"execution_count":88},{"cell_type":"code","source":"x_train=df_train.drop(['deposited?'],axis=1)\ny_train=df_train['deposited?']","metadata":{"execution":{"iopub.status.busy":"2024-10-26T10:41:44.986173Z","iopub.execute_input":"2024-10-26T10:41:44.986784Z","iopub.status.idle":"2024-10-26T10:41:44.995852Z","shell.execute_reply.started":"2024-10-26T10:41:44.986729Z","shell.execute_reply":"2024-10-26T10:41:44.994294Z"},"trusted":true},"outputs":[],"execution_count":89},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, accuracy_score, roc_auc_score, roc_curve, auc, confusion_matrix, precision_recall_curve\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndef evaluation_metrics(y_test, y_pre, y_proba, target_names):\n    # Scores\n    report = classification_report(y_test, y_pre, target_names=target_names)\n    print(report)\n    accuracy = accuracy_score(y_test, y_pre)\n    print(f\"Accuracy: {accuracy}\")\n    \n    # AUC\n    auc_score = roc_auc_score(y_test, y_proba)\n    print(f\"AUC: {auc_score}\")\n\ndef RF(X_train, X_test, y_train, y_test):\n    # Train the model\n    model = RandomForestClassifier(random_state=2)\n    model.fit(X_train, y_train)\n    # Predictions\n    y_pre = model.predict(X_test)\n    y_proba = model.predict_proba(X_test)[:, 1]  # Get probability scores for the positive class\n    # Print evaluation metrics\n    evaluation_metrics(y_test, y_pre, y_proba, target_names=['No Deposited', 'Deposited'])\n    \n    # Plot confusion matrix\n    unique_labels = y_test.unique()\n    cm = confusion_matrix(y_test, y_pre, labels=unique_labels)\n    plt.figure(figsize=(10, 6))\n    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=unique_labels, yticklabels=unique_labels)\n    plt.title('Confusion Matrix for RandomForestClassifier')\n    plt.xlabel('Predicted')\n    plt.ylabel('Actual')\n    plt.show()\n    \n    # ROC Curve\n    fpr, tpr, _ = roc_curve(y_test, y_proba, pos_label=unique_labels[1])\n    roc_auc = auc(fpr, tpr)\n    plt.figure(figsize=(10, 6))\n    plt.plot(fpr, tpr, label=f'RandomForestClassifier (AUC = {roc_auc:.2f})')\n    plt.plot([0, 1], [0, 1], linestyle='--', color='r')\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('ROC Curve for RandomForestClassifier')\n    plt.legend()\n    plt.grid(True)\n    plt.show()\n\n# Example usage\nRF(x_train, x_test, y_train, y_test)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-26T11:08:13.996364Z","iopub.execute_input":"2024-10-26T11:08:13.996769Z","iopub.status.idle":"2024-10-26T11:08:21.867745Z","shell.execute_reply.started":"2024-10-26T11:08:13.996733Z","shell.execute_reply":"2024-10-26T11:08:21.866352Z"},"trusted":true},"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\nNo Deposited       0.93      0.97      0.95     11977\n   Deposited       0.68      0.47      0.55      1587\n\n    accuracy                           0.91     13564\n   macro avg       0.81      0.72      0.75     13564\nweighted avg       0.90      0.91      0.90     13564\n\nAccuracy: 0.9118254202300207\nAUC: 0.9380842266518072\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 2 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":126},{"cell_type":"markdown","source":"# Conclusion","metadata":{}},{"cell_type":"markdown","source":"* Approximately all the classifiers have same result, but Random Forest was the best one.\n* The model has around 91% Accuracy.\n* Random Forest has 93% Precision, 95% Recall, & 95% F1 Score.\n* We can also see the results for each classifier as well.","metadata":{"execution":{"iopub.status.busy":"2024-10-24T10:10:07.630836Z","iopub.execute_input":"2024-10-24T10:10:07.631282Z","iopub.status.idle":"2024-10-24T10:10:07.639334Z","shell.execute_reply.started":"2024-10-24T10:10:07.631241Z","shell.execute_reply":"2024-10-24T10:10:07.637707Z"}}}]}